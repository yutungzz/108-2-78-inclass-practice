length(tainanSportsMap)
tainanSportsMap[[1]]
tainanSportsMap[[1076]]
View(tainanSportsMap)
# 有多少名字可選：
names(listExample)
listExample[["student"]]
listExample$student
listExample[["學期"]] # 小心不是反頓點喔。
listExample$`學期`
str(listExample)
str(listExample$學期)
str(listExample$`學期`)
str(newTaipeiCityVaccine)
fromJSON("http://data.ntpc.gov.tw/api/v1/rest/datastore/382000000A-000157-002",
simplifyDataFrame = F) -> newTaipeiCityVaccine
str(newTaipeiCityVaccine)
str(newTaipeiCityVaccine)
length(newTaipeiCityVaccine)
names(newTaipeiCityVaccine)
newTaipeiCityVaccine[[1]]
str(newTaipeiCityVaccine[[1]])
str(newTaipeiCityVaccine$success)
str(newTaipeiCityVaccine[[1]])
str(newTaipeiCityVaccine$success)
str(newTaipeiCityVaccine[["success"]])
str(newTaipeiCityVaccine[[2]])
str(newTaipeiCityVaccine$result)
str(newTaipeiCityVaccine[["result"]])
str(newTaipeiCityVaccine[[1]],max.level = 2)
str(newTaipeiCityVaccine$success)
str(newTaipeiCityVaccine[["success"]])
str(newTaipeiCityVaccine[[2]],max.level = 2)
str(newTaipeiCityVaccine$result)
str(newTaipeiCityVaccine[["result"]])
str(newTaipeiCityVaccine[[1]],max.level = 1)
str(newTaipeiCityVaccine$success,max.level = 1)
str(newTaipeiCityVaccine[["success"]],max.level = 1)
str(newTaipeiCityVaccine[[2]],max.level = 1)
str(newTaipeiCityVaccine$result,max.level = 1)
str(newTaipeiCityVaccine[["result"]],max.level = 1)
vectorExample
vectorExample[c(1,3)]
vectorExample[c(3,2,1)] # 產生重新排列效果
# 顯示到第一層
str(listExample, max.level=1)
listExample[c(1,2)]
# 顯示到第一層
str(listExample, max.level=1)
listExample[c(1,2)]
str(listExample[c(1,2)],max.level = 1)
str(listExample[c(2,1)],max.level = 1)
# 顯示到第一層
str(listExample, max.level=1)
listExample[c("學期")]
listExample[c("student","學期")]
fromJSON("https://www.dropbox.com/s/qnm9bnz7vccrvcz/taipeiNightMarkets.json?dl=1", simplifyDataFrame = F) -> taipeiNightMarkets
fromJSON("https://www.dropbox.com/s/qnm9bnz7vccrvcz/taipeiNightMarkets.json?dl=1", simplifyDataFrame = F) -> taipeiNightMarkets
str(taipeiNightMarkets[c(1,3)],max.level = 1)
fromJSON("https://www.dropbox.com/s/qnm9bnz7vccrvcz/taipeiNightMarkets.json?dl=1", simplifyDataFrame = F) -> taipeiNightMarkets
str(taipeiNightMarkets[c(1,3)],max.level = 1)
str(taipeiNightMarkets$寧夏觀光夜市)
fromJSON("https://www.dropbox.com/s/qnm9bnz7vccrvcz/taipeiNightMarkets.json?dl=1", simplifyDataFrame = F) -> taipeiNightMarkets
str(taipeiNightMarkets[c(1,3)],max.level = 1)
str(taipeiNightMarkets[["寧夏觀光夜市"]],max.level = 1)
taipeiNightMarkets[c(1,3)]
vectorExample
vectorExample[c(T,T,F)] # 要，要，不要
str(listExample[c(F,T)]) # 不要，要
str(listExample[c(T,T)]) # 要，要
knitr::opts_chunk$set(echo = TRUE)
names(taipeiNightMarkets)
names(taipeiNightMarkets)
c(T,F,F,F,T,F,F,F,F,T,F,F,F,T)
names(taipeiNightMarkets)
c(T,F,F,F,T,F,F,F,F,T,F,F,F,T) ->selectedMarkets
taipeiNightMarkets[c(T,F,F,F,T,F,F,F,F,T,F,F,F,T)]
names(taipeiNightMarkets)
c(T,F,F,F,T,F,F,F,F,T,F,F,F,T) ->selectedMarkets
taipeiNightMarkets[c(T,F,F,F,T,F,F,F,F,T,F,F,F,T),max.level=1]
names(taipeiNightMarkets)
c(T,F,F,F,T,F,F,F,F,T,F,F,F,T) ->selectedMarkets
taipeiNightMarkets[c(T,F,F,F,T,F,F,F,F,T,F,F,F,T),max.level=1]
names(taipeiNightMarkets)
c(T,F,F,F,T,F,F,F,F,T,F,F,F,T) ->selectedMarkets
str(taipeiNightMarkets[c(T,F,F,F,T,F,F,F,F,T,F,F,F,T)],max.level=1)
names(taipeiNightMarkets)
c(T,F,F,F,T,F,F,F,F,T,F,F,F,T) ->selectedMarkets
taipeiNightMarkets[selectedMarkets]
str(taipeiNightMarkets[c(T,F,F,F,T,F,F,F,F,T,F,F,F,T)],max.level=1)
selectedMarkets <- rep(F,14)  ## repeat
print(selectedMarkets)
selectedMarkets[c(1,5,10,14)]
selectedMarkets <- rep(F,14)  ## repeat
print(selectedMarkets)
selectedMarkets[c(1,5,10,14)] <- TRUE
selectedMarkets <- rep(F,14)  ## repeat
print(selectedMarkets)
selectedMarkets[c(1,5,10,14)] <- TRUE  ## replace
selectedMarkets <- rep(F,14)  ## repeat
print(selectedMarkets)
selectedMarkets[c(1,5,10,14)] <- TRUE  ## replace
print(selectedMarkets)
str(taipeiNightMarkets[selectedMarkets],max.level = 1)
str(listExample,max.level = 3)
get1 <- listExample[["學期"]]
get2 <- listExample["學期"]
get1 <- listExample[["學期"]]
get2 <- listExample["學期"]
str(get1)
str(get2)
str(get1)
str(get2)
str(get1,max.level = 1)
str(get2,max.level = 1)
str(get2,max.level = 1)
str(get2,max.level = 2)
str(listExample,max.level = 3)
numVector <- c(2,3,6,-1,4,2,6)
select1 <- numVector[c(1,4)]; select1
select2 <- select1[[1]]; select2
# 相當於
numVector[c(1,4)][[1]]
select1 <- numVector[c(T,T,F,T,F,F,T)]; select1
select2 <- select1[c(1,4)]; select2
# 相當於
numVector[c(T,T,F,T,F,F,T)][c(1,4)]
majors <- c("經濟學系","經濟學系","社會學系","社工系","經濟學系")
names <- c("小英", "小美", "大雄","阿華", "阿尼")
gender <- c("F","F","M","F","M")
majors <- c("經濟學系","經濟學系","社會學系","社工系","經濟學系")
names <- c("小英", "小美", "大雄","阿華", "阿尼")
gender <- c("F","F","M","F","M")
econOnly <- majors[c(1,2)]
majors <- c("經濟學系","經濟學系","社會學系","社工系","經濟學系")
names <- c("小英", "小美", "大雄","阿華", "阿尼")
gender <- c("F","F","M","F","M")
econOnly <- numVector(majors[c(1,2)])
majors <- c("經濟學系","經濟學系","社會學系","社工系","經濟學系")
names <- c("小英", "小美", "大雄","阿華", "阿尼")
gender <- c("F","F","M","F","M")
econOnly <- majors[c(1,2)]
majors <- c("經濟學系","經濟學系","社會學系","社工系","經濟學系")
names <- c("小英", "小美", "大雄","阿華", "阿尼")
gender <- c("F","F","M","F","M")
econOnly <- majors[c(T,T,F,F,T)]
majors <- c("經濟學系","經濟學系","社會學系","社工系","經濟學系")
names <- c("小英", "小美", "大雄","阿華", "阿尼")
gender <- c("F","F","M","F","M")
econOnly <- majors[c(T,T,F,F,T)] ;ECONoNLY
majors <- c("經濟學系","經濟學系","社會學系","社工系","經濟學系")
names <- c("小英", "小美", "大雄","阿華", "阿尼")
gender <- c("F","F","M","F","M")
econOnly <- majors[c(T,T,F,F,T)] ;econOnly
majors <- c("經濟學系","經濟學系","社會學系","社工系","經濟學系")
names <- c("小英", "小美", "大雄","阿華", "阿尼")
gender <- c("F","F","M","F","M")
econOnly <- majors[c(T,T,F,F,T)] ;econOnly
names[econOnly]
gender[econOnly]
majors <- c("經濟學系","經濟學系","社會學系","社工系","經濟學系")
names <- c("小英", "小美", "大雄","阿華", "阿尼")
gender <- c("F","F","M","F","M")
econOnly <- majors[c(T,T,F,F,T)] ;econOnly
names[econOnly]
gender[econOnly]
econFemaleOnly <- econOnly[c(1,2)]
majors <- c("經濟學系","經濟學系","社會學系","社工系","經濟學系")
names <- c("小英", "小美", "大雄","阿華", "阿尼")
gender <- c("F","F","M","F","M")
econOnly <- majors[c(T,T,F,F,T)] ;econOnly
names[econOnly]
gender[econOnly]
econFemaleOnly <- econOnly[c(1,2)]
majors <- c("經濟學系","經濟學系","社會學系","社工系","經濟學系")
names <- c("小英", "小美", "大雄","阿華", "阿尼")
gender <- c("F","F","M","F","M")
econOnly <- majors[c(T,T,F,F,T)] ;econOnly
names[econOnly]
gender[econOnly]
econFemaleOnly <- econOnly[c(1,2)] ; econFemaleOnly
majors <- c("經濟學系","經濟學系","社會學系","社工系","經濟學系")
names <- c("小英", "小美", "大雄","阿華", "阿尼")
gender <- c("F","F","M","F","M")
econOnly <- majors[c(T,T,F,F,T)] ;econOnly
names[econOnly]
gender[econOnly]
econFemaleOnly <- econOnly[c(1,2)] ; econFemaleOnly
names(econFemaleOnly)
majors <- c("經濟學系","經濟學系","社會學系","社工系","經濟學系")
names <- c("小英", "小美", "大雄","阿華", "阿尼")
gender <- c("F","F","M","F","M")
econOnly <- majors[c(T,T,F,F,T)] ;econOnly
names[econOnly]
gender[econOnly]
econFemaleOnly <- econOnly[c(1,2)] ; econFemaleOnly
names[econFemaleOnly]
majors <- c("經濟學系","經濟學系","社會學系","社工系","經濟學系")
names <- c("小英", "小美", "大雄","阿華", "阿尼")
gender <- c("F","F","M","F","M")
econOnly <- majors[c(T,T,F,F,T)] ;econOnly
names[econOnly]
gender[econOnly]
econFemaleOnly <- econOnly[c(1,2)] ; econFemaleOnly
names[econOnly][econFemaleOnly]
majors <- c("經濟學系","經濟學系","社會學系","社工系","經濟學系")
names <- c("小英", "小美", "大雄","阿華", "阿尼")
gender <- c("F","F","M","F","M")
econOnly <- majors[c(T,T,F,F,T)] ;econOnly
names[econOnly] <- names[c(T,T,F,F,T)]
gender[econOnly]
econFemaleOnly <- econOnly[c(1,2)] ; econFemaleOnly
names[econOnly][econFemaleOnly]
majors <- c("經濟學系","經濟學系","社會學系","社工系","經濟學系")
names <- c("小英", "小美", "大雄","阿華", "阿尼")
gender <- c("F","F","M","F","M")
econOnly <- majors[c(T,T,F,F,T)] ;econOnly
names[econOnly] <- names[c(T,T,F,F,T)] ;names[econOnly]
gender[econOnly]
econFemaleOnly <- econOnly[c(1,2)] ; econFemaleOnly
names[econOnly][econFemaleOnly]
majors <- c("經濟學系","經濟學系","社會學系","社工系","經濟學系")
names <- c("小英", "小美", "大雄","阿華", "阿尼")
gender <- c("F","F","M","F","M")
econOnly <- majors[c(T,T,F,F,T)] ;econOnly
names[econOnly]
gender[econOnly]
econFemaleOnly <- econOnly[c(1,2)] ; econFemaleOnly
names[econOnly][econFemaleOnly]
majors <- c("經濟學系","經濟學系","社會學系","社工系","經濟學系")
names <- c("小英", "小美", "大雄","阿華", "阿尼")
gender <- c("F","F","M","F","M")
econOnly <- majors[c(1,2,5)] ;econOnly
names[econOnly] <-
gender[econOnly]
econFemaleOnly <- econOnly[c(1,2)] ; econFemaleOnly
names[econOnly][econFemaleOnly]
majors <- c("經濟學系","經濟學系","社會學系","社工系","經濟學系")
names <- c("小英", "小美", "大雄","阿華", "阿尼")
gender <- c("F","F","M","F","M")
econOnly <- majors[c(1,2,5)] ;econOnly
names[econOnly] <- names[c(1,2,5)]
gender[econOnly]
econFemaleOnly <- econOnly[c(1,2)] ; econFemaleOnly
names[econOnly][econFemaleOnly]
majors <- c("經濟學系","經濟學系","社會學系","社工系","經濟學系")
names <- c("小英", "小美", "大雄","阿華", "阿尼")
gender <- c("F","F","M","F","M")
econOnly <- majors[c(1,2,5)] ;econOnly
names[econOnly] <- names[c(1,2,5)] ;names[econOnly]
gender[econOnly] <- gender[c(1,2,5)] ;gender[econOnly]
econFemaleOnly <- econOnly[c(1,2)] ; econFemaleOnly
names[econOnly][econFemaleOnly]
majors <- c("經濟學系","經濟學系","社會學系","社工系","經濟學系")
names <- c("小英", "小美", "大雄","阿華", "阿尼")
gender <- c("F","F","M","F","M")
econOnly <- majors[c(1,2,5)] ;econOnly
a <- names[c(1,2,5)]
print(a)
gender[econOnly] <- gender[c(1,2,5)] ;gender[econOnly]
econFemaleOnly <- econOnly[c(1,2)] ; econFemaleOnly
names[econOnly][econFemaleOnly]
majors <- c("經濟學系","經濟學系","社會學系","社工系","經濟學系")
names <- c("小英", "小美", "大雄","阿華", "阿尼")
gender <- c("F","F","M","F","M")
econOnly <- majors[c(1,2,5)] ;econOnly
a <- names[c(1,2,5)]
print(a)
b <- gender[c(1,2,5)]
print(b)
econFemaleOnly <- econOnly[c(1,2)] ; econFemaleOnly
names[econOnly][econFemaleOnly]
majors <- c("經濟學系","經濟學系","社會學系","社工系","經濟學系")
names <- c("小英", "小美", "大雄","阿華", "阿尼")
gender <- c("F","F","M","F","M")
econOnly <- majors[c(1,2,5)] ;econOnly
a <- names[c(1,2,5)]
print(a)
b <- gender[c(1,2,5)]
print(b)
econFemaleOnly <- gender[c(1,2,5)][c(1,2)] ; econFemaleOnly
names[econOnly][econFemaleOnly]
majors <- c("經濟學系","經濟學系","社會學系","社工系","經濟學系")
names <- c("小英", "小美", "大雄","阿華", "阿尼")
gender <- c("F","F","M","F","M")
econOnly <- majors[c(1,2,5)] ;econOnly
a <- names[c(1,2,5)]
print(a)
b <- gender[c(1,2,5)]
print(b)
econFemaleOnly <- gender[c(1,2,5)][c(1,2)] ; econFemaleOnly
c <- names[c(1,2,5)][c(1,2)]
majors <- c("經濟學系","經濟學系","社會學系","社工系","經濟學系")
names <- c("小英", "小美", "大雄","阿華", "阿尼")
gender <- c("F","F","M","F","M")
econOnly <- majors[c(1,2,5)] ;econOnly
a <- names[c(1,2,5)]
print(a)
b <- gender[c(1,2,5)]
print(b)
econFemaleOnly <- gender[c(1,2,5)][c(1,2)] ; econFemaleOnly
c <- names[c(1,2,5)][c(1,2)]
print(c)
source("https://www.dropbox.com/s/mk7bxvu6a3lxf79/studentEnvironmentReport.R?dl=1",print.eval = T)
knitr::opts_chunk$set(echo = TRUE)
source("https://www.dropbox.com/s/mk7bxvu6a3lxf79/studentEnvironmentReport.R?dl=1",print.eval = T)
knitr::opts_chunk$set(echo = F, eval=F)
library(lubridate); library(jsonlite); library(readr)
lilrary(lubridate)
library(lubridate)
course <- list(
approve= T ,
course_infe =list(
coursename = "會計學",
type = "必",
credits = 3,
time_place = list(
weekday = "星期三",
time_slots = 7 ,
classroom = "商2F05"
)
)
)
str(course)
course <- list(
approve= T ,
course_info =list(
coursename = "會計學",
type = "必",
credits = 3,
time_place = list(
weekday = "星期三",
time_slots = 7 ,
classroom = "商2F05"
)
)
)
str(course)
course <- list(
approve= T ,
course_info =list(
coursename = "會計學",
type = "必",
credits = 3,
time_place = list(
weekday = "星期三",
time_slots = 7,8,9 ,
classroom = "商2F05"
)
)
)
str(course)
courseUpdate<- list(
approve= T ,
course_info =list(
coursename = "會計學",
type = "必",
credits = 3,
time_place1 = list(
weekday = "星期三",
time_slots = 7,8 ,
classroom = "商2F05"
),
time_place2 = list(
weekday = "星期二",
time_slots = 5 ,
classroom = "商2F05"
)
)
)
# courseUpdate
courseUpdate<- list(
approve= T ,
course_info =list(
coursename = "會計學",
type = "必",
credits = 3,
time_place1 = list(
weekday = "星期三",
time_slots = 7,8 ,
classroom = "商2F05"
),
time_place2 = list(
weekday = "星期二",
time_slots = 5 ,
classroom = "商2F05"
)
)
)
str(courseUpdate)
course <- list(
approve= T ,
course_info =list(
coursename = "會計學",
type = "必",
credits = 3,
time_place = list(
weekday = "星期三",
time_slots = 7,8,9 ,
classroom = "商2F05"
)
)
)
str(course)
knitr::opts_chunk$set(echo = TRUE)
library(magrittr)
sort(threeHeigths, decreasing=T) %>%
names(.) %>%
.[[1]] -> highestPerson
names(sort(threeHeigths, decreasing = T))[[1]] -> highestPerson
threeHeigths <- c(Gary=178, John=182, Cam=175)
# 先排序由大到小，
sort(threeHeigths, decreasing=T) -> sorted_heights
# 把排好的人名取出
names(sorted_heights) -> sorted_persons
# 接著取出第一個位置的人名
sorted_persons[[1]] -> highestPerson
names(sort(threeHeigths, decreasing = T))[[1]] -> highestPerson
library(magrittr)
sort(threeHeigths, decreasing=T) %>%
names(.) %>%
.[[1]] -> highestPerson
f(w) -> x
f(w) %>%
g(.) %>%
h(.) -> z
# 由cities創出每個元素對應的北部、東部、中部region factor
cities <- factor(c("台北","花蓮","台東","台中"))
levels(cities)
region <- cities
# 以下為一連串的pipe operation
levels(region) -> currentLevels
str_replace(currentLevels,"台北","北部") -> currentLevels1
levels(region) %>%
str_replace(.,"台北","北部") %>%
str_replace(.,"花蓮|台東","東部") %>%
str_replace(.,"台中","中部") ->
levels(region)
region <- cities
library(stringr)
# 以下為一連串的pipe operation
levels(region) -> currentLevels
str_replace(currentLevels,"台北","北部") -> currentLevels1
str_replace(currentLevels1,"花蓮|台東","東部") -> currentLevels2
str_replace(currentLevels2,"台中","中部") -> regionLevels
regionLevels -> levels(region)
levels(region) %>%
str_replace(.,"台北","北部") %>%
str_replace(.,"花蓮|台東","東部") %>%
str_replace(.,"台中","中部") ->
levels(region)
num <- c(2,97,22,15,7)
# 選出大於50的數字
(num > 50) -> pick_big
num[pick_big]
(num > 50) %>%
num[.]
levels(region) %>%
str_replace(.,"台北","北部") %>%
str_replace(.,"花蓮|台東","東部") %>%
str_replace(.,"台中","中部") ->
levels(region)
levels(region) %>%
str_replace("台北","北部") %>%
str_replace("花蓮|台東","東部") %>%
str_replace("台中","中部") ->
levels(region)
# 資料
population <- c(`cityA`=500,`cityB`=1500, `cityC`=399)
cities <- c("cityA","cityA","cityB","cityB","cityC")
# 分析步驟
names(sort(population)) -> setLevels
factor(cities, levels = setLevels) -> cities
population %>%
names(sort(.)) %>%
factor(cities, levels=.) -> cities
population %>% names(sort(.))
population %>%
sort() %>%
names() %>%
factor(cities, levels=.) -> cities
population %>%
names(sort(.)) %>%
factor(cities, levels=.) -> cities
population %>%
{names(sort(.))} %>%
factor(cities, levels=.) -> cities
dataList <- list(
num=c(2,97,22,15,7),
chr=c("2","97","22","15","7")
)
map(dataList, is.numeric) -> results
map(dataList, is.numeric) %>%
unlist(.) %>%
dataList[.] %>%
{(.[[1]] > 50)} %>%
num_element[[1]][.] -> bigNumber
map(dance[[4]]$showInfo, ~ .x$time) ->
list_showTimes_dance4
library(purrr)
map(dance, ~.x$title) ->
list_titles
map(dataList, is.numeric) -> results
unlist(results) -> pick_numeric
dataList[pick_numeric] -> num_element
(num_element[[1]] > 50) -> pick_big
num_element[[1]][pick_big] -> bigNumber
map(dataList, is.numeric) %>%
unlist(.) %>%
dataList[.] %>%
{(.[[1]] > 50)} %>%
num_element[[1]][.] -> bigNumber
